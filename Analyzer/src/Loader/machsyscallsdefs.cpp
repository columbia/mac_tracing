/* automatically generated with script */
#include "loader.hpp"
namespace LoadData
{
	const struct syscall_entry mach_syscall_table[] = {
		{10,	"mach_vm_allocate_trap", 
			{"target_port_name", "mach_vm_address", "size", "flags"}},
		{12, 	"mach_vm_deallocate_trap", 
			{"target_port_name", "mach_vm_address", "size"}},
		{14,	"mach_vm_protect_trap", 
			{"target_port_name", "mach_vm_address", "size", "set_maximum", "new_protection"}},
		{15, 	"mach_vm_map_trap", 
			{"target_port_name", "mach_vm_address", "size", "mask", "flags"}},
		{16, 	"mach_port_allocate_trap",
			{"target_port_name", "port_right", "user_addr_port_name"}},
		{17,	"mach_port_destroy_trap", 
			{"target_port_name", "name_port_name"}},
		{18,  	"mach_port_deallocate_trap", 
			{"target_port_name", "name_port_name"}},
		{19, 	"mach_port_mod_refs_trap", 
			{"target_port_name", "name_port_name", "port_right", "delta"}},
		{20, 	"mach_port_move_member_trap", 
			{"target_port_name", "member_port_name", "after_port_name"}},
		{21, 	"mach_port_insert_right_trap", 
			{"target_port_name", "name_port_name", "poly_port_name", "polyPoly"}},
		{22, 	"mach_port_insert_member_trap", 
			{"target_port_name", "name_port_name", "pset_port_name"}},
		{23, 	"mach_port_extract_member_trap",
			{"target_port_name", "name_port_name", "pset_port_name"}},
		{24, 	"mach_port_construct_trap",
			{"target_port_name", "options", "context", "user_address_name"}},
		{25, 	"mach_port_destruct_trap",
			{"target_port_name", "name_port_name", "srdelta", "guard"}},
		{26, 	"mach_reply_port",
			{"dummy"}},
		{27, 	"thread_self_trap",
			{"dummy"}},
		{28, 	"task_self_trap",
			{"dummy"}},
		{29,  	"host_self_trap",
			{"dummy"}},
		{31, 	"mach_msg_trap",
			{"msg_header", "option", "send_size", "rcv_size", "rcv_port_name", "timeout", "notify"}},
		{32, 	"mach_msg_overwrite_trap",
			{"msg_header", "option", "send_size", "rcv_size", "rcv_port_name", "timeout", "notify", "rcv_msg", "rcv_limit"}},
		{33, 	"semaphore_signal_trap",
			{"signal_name"}},
		{34, 	"semaphore_signal_all_trap",
			{"signal_name"}},
		{35,	"semaphore_signal_thread_trap",
			{"signal_name", "thread_port_name"}},
		{36,	"semaphore_wait_trap",
			{"wait_name"}},
		{37,	"semaphore_wait_signal_trap",
			{"wait_name", "signal_name"}},
		{38,	"semaphore_timedwait_trap",
			{"wait_name", "seconds", "nsecs"}},
		{39,	"semaphore_timedwait_signal_trap",
			{"wait_name", "signal_name", "seconds", "nsecs"}},
		{41,	"mach_port_guard_trap",
			{"target_port_name", "name_port_name", "guard", "strict"}},
		{42,	"mach_port_unguard_trap",
			{"target_port_name", "name_port_name", "guard"}},
		{44,	"task_name_for_pid",
			{"target_port_name", "pid", "user_address"}},
		{45, 	"task_for_pid",
			{"target_port_name", "pid", "user_address"}},
		{46,	"pid_for_task",
			{"target_port_name", "pid"}},
		{48,	"macx_swapon",
			{"filename", "flags", "size", "priority"}},
		{49,	"macx_swapoff",
			{"filename", "flags"}},
		{51,	"macx_triggers",
			{"hi_water", "low_water", "flags", "alert_port"}},
		{52,	"macx_backing_store_suspend",
			{"suspend"}},
		{53,	"macx_backing_store_recovery",
			{"pid"}},
		{58,	"pfz_exit",
			{"dummy"}},
		{59, 	"swtch_pri",
			{"pri"}},
		{60,	"swtch",
			{"void"}},
		{61,	"thread_switch",
			{"thread_port_name", "option", "option_time"}},
		{62,	"clock_sleep_trap",
			{"clock_port_name", "sleep_type", "sleep_sec", "sleep_nsec", "wakeup_time"}},
		{89,	"mach_timebase_info",
			{"user_addr_info"}},
		{90,	"mach_wait_until",
			{"deadline"}},
		{91,	"mk_timer_create",
			{"dummy"}},
		{92,	"mk_timer_destroy",
			{"mach_port_name"}},
		{93,	"mk_timer_arm",
			{"mach_port_name", "expire_time"}},
		{94,	"mk_timer_cancel",
			{"mach_port_name", "result_time"}},
		{100,	"iokit_user_client",
			{"user_clientref", "index"}}
	};

	const uint64_t msc_size = sizeof(mach_syscall_table)/sizeof(struct syscall_entry);
}
